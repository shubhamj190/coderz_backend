# Generated by Django 4.2.18 on 2025-02-05 18:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserId', models.AutoField(primary_key=True, serialize=False)),
                ('UserName', models.CharField(max_length=150, unique=True)),
                ('NormalizedUserName', models.CharField(blank=True, max_length=150, unique=True)),
                ('Email', models.EmailField(max_length=254, unique=True)),
                ('NormalizedEmail', models.EmailField(blank=True, max_length=254, unique=True)),
                ('EmailConfirmed', models.BooleanField(default=False)),
                ('PhoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('PhoneNumberConfirmed', models.BooleanField(default=False)),
                ('TwoFactorEnabled', models.BooleanField(default=False)),
                ('LockoutEnd', models.DateTimeField(blank=True, null=True)),
                ('LockoutEnabled', models.BooleanField(default=True)),
                ('AccessFailedCount', models.IntegerField(default=0)),
                ('InstitutionId', models.IntegerField(blank=True, null=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('teacher', 'Teacher'), ('admin', 'Admin'), ('student', 'Student')], default='student', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usersidentity',
            },
        ),
    ]
