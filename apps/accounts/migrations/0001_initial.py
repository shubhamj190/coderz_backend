# Generated by Django 4.2.18 on 2025-02-22 06:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserId', models.CharField(db_column='UserId', max_length=450, primary_key=True, serialize=False)),
                ('UserName', models.CharField(blank=True, db_column='UserName', max_length=256, null=True, unique=True)),
                ('NormalizedUserName', models.CharField(blank=True, db_column='NormalizedUserName', max_length=256, null=True, unique=True)),
                ('Email', models.CharField(blank=True, db_column='Email', max_length=256, null=True, unique=True)),
                ('NormalizedEmail', models.CharField(blank=True, db_column='NormalizedEmail', max_length=256, null=True, unique=True)),
                ('EmailConfirmed', models.BooleanField(db_column='EmailConfirmed', default=False)),
                ('PasswordHash', models.TextField(blank=True, db_column='PasswordHash', null=True)),
                ('SecurityStamp', models.TextField(blank=True, db_column='SecurityStamp', null=True)),
                ('ConcurrencyStamp', models.TextField(blank=True, db_column='ConcurrencyStamp', null=True)),
                ('PhoneNumber', models.TextField(blank=True, db_column='PhoneNumber', null=True)),
                ('PhoneNumberConfirmed', models.BooleanField(db_column='PhoneNumberConfirmed', default=False)),
                ('TwoFactorEnabled', models.BooleanField(db_column='TwoFactorEnabled', default=False)),
                ('LockoutEnd', models.DateTimeField(blank=True, db_column='LockoutEnd', null=True)),
                ('LockoutEnabled', models.BooleanField(db_column='LockoutEnabled', default=True)),
                ('AccessFailedCount', models.IntegerField(db_column='AccessFailedCount', default=0)),
                ('IsActive', models.BooleanField(db_column='IsActive', default=True)),
                ('IsDeleted', models.BooleanField(db_column='IsDeleted', default=False)),
            ],
            options={
                'db_table': 'dbo.UserIdentity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('BId', models.AutoField(db_column='BId', primary_key=True, serialize=False)),
                ('BoardId', models.CharField(blank=True, db_column='BoardId', max_length=50, null=True)),
                ('BoardName', models.CharField(blank=True, db_column='BoardName', max_length=200, null=True)),
                ('BoardDisplayName', models.CharField(blank=True, db_column='BoardDisplayName', max_length=200, null=True)),
                ('SequenceNo', models.IntegerField(db_column='SequenceNo')),
                ('IsActive', models.BooleanField(db_column='IsActive')),
                ('IsDeleted', models.BooleanField(db_column='IsDeleted')),
                ('ModifiedOn', models.DateTimeField(blank=True, db_column='ModifiedOn', null=True)),
                ('ModifiedBy', models.CharField(blank=True, db_column='ModifiedBy', max_length=50, null=True)),
            ],
            options={
                'db_table': 'dbo.Board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Division',
                'verbose_name_plural': 'Divisions',
                'db_table': 'dbo.Division',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('BoardId', models.CharField(blank=True, db_column='BoardId', max_length=50, null=True)),
                ('GradeId', models.CharField(blank=True, db_column='GradeId', max_length=50, null=True)),
                ('GradeName', models.CharField(blank=True, db_column='GradeName', max_length=50, null=True)),
                ('IsActive', models.BooleanField(db_column='IsActive', default=True)),
            ],
            options={
                'db_table': 'dbo.Grade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMaster',
            fields=[
                ('GID', models.AutoField(db_column='GID', primary_key=True, serialize=False)),
                ('GroupId', models.CharField(blank=True, db_column='GroupId', max_length=100, null=True)),
                ('GroupName', models.CharField(db_column='GroupName', max_length=255)),
                ('GroupShortName', models.CharField(blank=True, db_column='GroupShortName', max_length=255, null=True)),
                ('LocationId', models.IntegerField(db_column='LocationId')),
                ('QuestId', models.CharField(blank=True, db_column='QuestId', max_length=50, null=True)),
                ('IsActive', models.BooleanField(db_column='IsActive')),
                ('IsDeleted', models.BooleanField(db_column='IsDeleted', default=False)),
                ('PropertyJSON', models.TextField(blank=True, db_column='PropertyJSON', null=True)),
                ('ClassId', models.IntegerField(blank=True, db_column='ClassId', null=True)),
                ('SubClassId', models.IntegerField(blank=True, db_column='SubClassId', null=True)),
                ('SequenceNo', models.IntegerField(blank=True, db_column='SequenceNo', null=True)),
                ('ModifiedOn', models.DateTimeField(blank=True, db_column='ModifiedOn', null=True)),
            ],
            options={
                'db_table': 'dbo.GroupMaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('InstitutionId', models.IntegerField(db_column='InstitutionId', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'dbo.Institutions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('LID', models.AutoField(db_column='LID', primary_key=True, serialize=False)),
                ('LocationId', models.CharField(blank=True, db_column='LocationId', max_length=50, null=True)),
                ('LocationName', models.CharField(db_column='LocationName', max_length=100)),
                ('IsActive', models.BooleanField(db_column='IsActive')),
                ('IsDeleted', models.BooleanField(db_column='IsDeleted')),
                ('InstitutionId', models.IntegerField(db_column='InstitutionId')),
                ('DoNotTrack', models.BooleanField(blank=True, db_column='DoNotTrack', null=True)),
                ('ModifiedOn', models.DateTimeField(blank=True, db_column='ModifiedOn', null=True)),
                ('IsErpUsed', models.BooleanField(blank=True, db_column='IsErpUsed', null=True)),
                ('ERP_API_Url', models.TextField(blank=True, db_column='ERP_API_Url', null=True)),
            ],
            options={
                'db_table': 'dbo.Location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LocationId', models.CharField(db_column='LocationId', max_length=50)),
                ('GroupId', models.CharField(db_column='GroupId', max_length=50)),
                ('ModifiedOn', models.DateTimeField(blank=True, db_column='ModifiedOn', null=True)),
                ('IsDeleted', models.BooleanField(db_column='IsDeleted', default=False)),
                ('Import_Code', models.CharField(blank=True, db_column='Import_Code', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'User Group',
                'verbose_name_plural': 'User Groups',
                'db_table': 'dbo.UserGroup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('user', models.OneToOneField(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='details', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ContactNo', models.CharField(blank=True, db_column='ContactNo', max_length=50, null=True)),
                ('AdditionalContactNo', models.CharField(blank=True, db_column='AdditionalContactNo', max_length=50, null=True)),
                ('Address', models.TextField(blank=True, db_column='Address', null=True)),
                ('Location', models.CharField(blank=True, db_column='Location', max_length=100, null=True)),
                ('Pincode', models.CharField(blank=True, db_column='Pincode', max_length=50, null=True)),
                ('CityCode', models.CharField(blank=True, db_column='CityCode', max_length=50, null=True)),
                ('StateCode', models.CharField(blank=True, db_column='StateCode', max_length=50, null=True)),
                ('CountryCode', models.CharField(blank=True, db_column='CountryCode', max_length=10, null=True)),
                ('LastUsedDevice', models.CharField(blank=True, db_column='LastUsedDevice', max_length=50, null=True)),
                ('PromoCode', models.CharField(blank=True, db_column='PromoCode', max_length=10, null=True)),
                ('PromoRefCode', models.CharField(blank=True, db_column='PromoRefCode', max_length=10, null=True)),
                ('ModifiedOn', models.DateTimeField(blank=True, db_column='ModifiedOn', null=True)),
                ('IsActive', models.BooleanField(db_column='IsActive', default=True)),
                ('IsDeleted', models.BooleanField(db_column='IsDeleted', default=False)),
                ('CustomerGST', models.CharField(blank=True, db_column='CustomerGST', max_length=500, null=True)),
                ('UserSource', models.CharField(blank=True, db_column='UserSource', max_length=50, null=True)),
                ('SchoolName', models.CharField(blank=True, db_column='SchoolName', max_length=100, null=True)),
                ('QuestId', models.CharField(blank=True, db_column='QuestId', max_length=50, null=True)),
                ('UserType', models.CharField(blank=True, choices=[('Learner', 'Learner'), ('Teacher', 'Teacher'), ('Admin', 'Admin')], db_column='UserType', max_length=50, null=True)),
                ('FirstName', models.CharField(blank=True, db_column='FirstName', max_length=50, null=True)),
                ('MiddleName', models.CharField(blank=True, db_column='MiddleName', max_length=50, null=True)),
                ('LastName', models.CharField(blank=True, db_column='LastName', max_length=50, null=True)),
                ('LastQuestAccessed', models.CharField(blank=True, db_column='LastQuestAccessed', max_length=50, null=True)),
                ('IsDirectUser', models.BooleanField(db_column='IsDirectUser', default=False)),
                ('UTMData', models.CharField(blank=True, db_column='UTMData', max_length=1000, null=True)),
                ('AdmissionNo', models.CharField(blank=True, db_column='AdmissionNo', max_length=500, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], db_column='Gender', max_length=10, null=True)),
            ],
            options={
                'db_table': 'dbo.UserDetails',
                'managed': False,
            },
        ),
    ]
